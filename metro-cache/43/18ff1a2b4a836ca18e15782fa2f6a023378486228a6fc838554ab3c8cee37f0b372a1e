{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"./lib/TextExtraction","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.PATTERNS = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/extends\"));\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"prop-types\"));\n\n  var _TextExtraction = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./lib/TextExtraction\"));\n\n  var _jsxFileName = \"/home/phantom/Desktop/kitchat/node_modules/react-native-parsed-text/src/ParsedText.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var PATTERNS = {\n    url: /(https?:\\/\\/|www\\.)[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&\\/=]*[-a-zA-Z0-9@:%_\\+~#?&\\/=])*/i,\n    phone: /[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,7}/,\n    email: /\\S+@\\S+\\.\\S+/\n  };\n  exports.PATTERNS = PATTERNS;\n\n  var defaultParseShape = _propTypes.default.shape(_objectSpread({}, _reactNative.Text.propTypes, {\n    type: _propTypes.default.oneOf(Object.keys(PATTERNS)).isRequired\n  }));\n\n  var customParseShape = _propTypes.default.shape(_objectSpread({}, _reactNative.Text.propTypes, {\n    pattern: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.instanceOf(RegExp)]).isRequired\n  }));\n\n  var ParsedText = function (_React$Component) {\n    (0, _inherits2.default)(ParsedText, _React$Component);\n\n    function ParsedText() {\n      (0, _classCallCheck2.default)(this, ParsedText);\n      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ParsedText).apply(this, arguments));\n    }\n\n    (0, _createClass2.default)(ParsedText, [{\n      key: \"setNativeProps\",\n      value: function setNativeProps(nativeProps) {\n        this._root.setNativeProps(nativeProps);\n      }\n    }, {\n      key: \"getPatterns\",\n      value: function getPatterns() {\n        return this.props.parse.map(function (option) {\n          var type = option.type,\n              patternOption = (0, _objectWithoutProperties2.default)(option, [\"type\"]);\n\n          if (type) {\n            if (!PATTERNS[type]) {\n              throw new Error(option.type + \" is not a supported type\");\n            }\n\n            patternOption.pattern = PATTERNS[type];\n          }\n\n          return patternOption;\n        });\n      }\n    }, {\n      key: \"getParsedText\",\n      value: function getParsedText() {\n        var _this = this;\n\n        if (!this.props.parse) {\n          return this.props.children;\n        }\n\n        if (typeof this.props.children !== 'string') {\n          return this.props.children;\n        }\n\n        var textExtraction = new _TextExtraction.default(this.props.children, this.getPatterns());\n        return textExtraction.parse().map(function (props, index) {\n          var parentStyle = _this.props.style;\n          var style = props.style,\n              remainder = (0, _objectWithoutProperties2.default)(props, [\"style\"]);\n          return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({\n            key: \"parsedText-\" + index,\n            style: [parentStyle, style]\n          }, _this.props.childrenProps, remainder, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            }\n          }));\n        });\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var _this$props = _objectSpread({}, this.props),\n            parse = _this$props.parse,\n            childrenProps = _this$props.childrenProps,\n            remainder = (0, _objectWithoutProperties2.default)(_this$props, [\"parse\", \"childrenProps\"]);\n\n        return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({\n          ref: function ref(_ref) {\n            return _this2._root = _ref;\n          }\n        }, remainder, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          }\n        }), this.getParsedText());\n      }\n    }]);\n    return ParsedText;\n  }(_react.default.Component);\n\n  ParsedText.displayName = 'ParsedText';\n  ParsedText.propTypes = _objectSpread({}, _reactNative.Text.propTypes, {\n    parse: _propTypes.default.arrayOf(_propTypes.default.oneOfType([defaultParseShape, customParseShape])),\n    childrenProps: _propTypes.default.shape(_reactNative.Text.propTypes)\n  });\n  ParsedText.defaultProps = {\n    parse: null,\n    childrenProps: {}\n  };\n  var _default = ParsedText;\n  exports.default = _default;\n});","lineCount":150,"map":[[25,0,1,0],[27,0,2,0],[29,0,3,0],[31,0,5,0],[39,0,7,7],[39,6,7,13,"PATTERNS"],[39,14,7,21],[39,17,7,24],[40,0,8,2,"url"],[40,4,8,2,"url"],[40,7,8,5],[40,9,8,7],[40,129,7,24],[41,0,9,2,"phone"],[41,4,9,2,"phone"],[41,9,9,7],[41,11,9,9],[41,68,7,24],[42,0,10,2,"email"],[42,4,10,2,"email"],[42,9,10,7],[42,11,10,9],[43,0,7,24],[43,3,7,7],[46,0,13,0],[46,6,13,6,"defaultParseShape"],[46,23,13,23],[46,26,13,26,"PropTypes"],[46,45,13,36,"shape"],[46,50,13,26],[46,69,14,5,"Text"],[46,87,14,10,"propTypes"],[46,96,13,26],[47,0,15,2,"type"],[47,4,15,2,"type"],[47,8,15,6],[47,10,15,8,"PropTypes"],[47,29,15,18,"oneOf"],[47,34,15,8],[47,35,15,24,"Object"],[47,41,15,30],[47,42,15,31,"keys"],[47,46,15,24],[47,47,15,36,"PATTERNS"],[47,55,15,24],[47,56,15,8],[47,58,15,47,"isRequired"],[48,0,13,26],[48,5,13,0],[50,0,18,0],[50,6,18,6,"customParseShape"],[50,22,18,22],[50,25,18,25,"PropTypes"],[50,44,18,35,"shape"],[50,49,18,25],[50,68,19,5,"Text"],[50,86,19,10,"propTypes"],[50,95,18,25],[51,0,20,2,"pattern"],[51,4,20,2,"pattern"],[51,11,20,9],[51,13,20,11,"PropTypes"],[51,32,20,21,"oneOfType"],[51,41,20,11],[51,42,20,31],[51,43,20,32,"PropTypes"],[51,62,20,42,"string"],[51,68,20,31],[51,70,20,50,"PropTypes"],[51,89,20,60,"instanceOf"],[51,99,20,50],[51,100,20,71,"RegExp"],[51,106,20,50],[51,107,20,31],[51,108,20,11],[51,110,20,81,"isRequired"],[52,0,18,25],[52,5,18,0],[54,6,23,6,"ParsedText"],[54,16],[64,37,39,17,"nativeProps"],[64,48],[64,50,39,30],[65,0,40,4],[65,13,40,9,"_root"],[65,18,40,4],[65,19,40,15,"setNativeProps"],[65,33,40,4],[65,34,40,30,"nativeProps"],[65,45,40,4],[66,0,41,3],[69,36,43,16],[70,0,44,4],[70,15,44,11],[70,20,44,16,"props"],[70,25,44,11],[70,26,44,22,"parse"],[70,31,44,11],[70,32,44,28,"map"],[70,35,44,11],[70,36,44,32],[70,46,44,32,"option"],[70,52,44,38],[70,54,44,42],[71,0,44,42],[71,14,45,14,"type"],[71,18,44,42],[71,21,45,41,"option"],[71,27,44,42],[71,28,45,14,"type"],[71,32,44,42],[72,0,44,42],[72,14,45,23,"patternOption"],[72,27,44,42],[72,69,45,41,"option"],[72,75,44,42],[74,0,46,6],[74,14,46,10,"type"],[74,18,46,6],[74,20,46,16],[75,0,47,8],[75,16,47,12],[75,17,47,13,"PATTERNS"],[75,25,47,21],[75,26,47,22,"type"],[75,30,47,21],[75,31,47,8],[75,33,47,29],[76,0,48,10],[76,20,48,16],[76,24,48,20,"Error"],[76,29,48,16],[76,30,48,29,"option"],[76,36,48,35],[76,37,48,36,"type"],[76,41,48,16],[76,71,48,10],[77,0,49,9],[79,0,50,8,"patternOption"],[79,12,50,8,"patternOption"],[79,25,50,21],[79,26,50,22,"pattern"],[79,33,50,8],[79,36,50,32,"PATTERNS"],[79,44,50,40],[79,45,50,41,"type"],[79,49,50,40],[79,50,50,8],[80,0,51,7],[82,0,53,6],[82,17,53,13,"patternOption"],[82,30,53,6],[83,0,54,5],[83,9,44,11],[83,10,44,4],[84,0,55,3],[87,38,57,18],[88,0,57,18],[90,0,58,4],[90,12,58,8],[90,13,58,9],[90,18,58,14,"props"],[90,23,58,9],[90,24,58,20,"parse"],[90,29,58,4],[90,31,58,27],[91,0,59,6],[91,17,59,13],[91,22,59,18,"props"],[91,27,59,13],[91,28,59,24,"children"],[91,36,59,6],[92,0,60,5],[94,0,61,4],[94,12,61,8],[94,19,61,15],[94,24,61,20,"props"],[94,29,61,15],[94,30,61,26,"children"],[94,38,61,8],[94,43,61,39],[94,51,61,4],[94,53,61,49],[95,0,62,6],[95,17,62,13],[95,22,62,18,"props"],[95,27,62,13],[95,28,62,24,"children"],[95,36,62,6],[96,0,63,5],[98,0,65,4],[98,12,65,10,"textExtraction"],[98,26,65,24],[98,29,65,27],[98,33,65,31,"TextExtraction"],[98,56,65,27],[98,57,66,6],[98,62,66,11,"props"],[98,67,66,6],[98,68,66,17,"children"],[98,76,65,27],[98,78,67,6],[98,83,67,11,"getPatterns"],[98,94,67,6],[98,96,65,27],[98,97,65,4],[99,0,70,4],[99,15,70,11,"textExtraction"],[99,29,70,25],[99,30,70,26,"parse"],[99,35,70,11],[99,38,70,34,"map"],[99,41,70,11],[99,42,70,38],[99,52,70,39,"props"],[99,57,70,38],[99,59,70,46,"index"],[99,64,70,38],[99,66,70,56],[100,0,70,56],[100,14,71,21,"parentStyle"],[100,25,70,56],[100,28,71,37],[100,33,71,41],[100,34,71,42,"props"],[100,39,70,56],[100,40,71,14,"style"],[100,45,70,56],[101,0,70,56],[101,14,72,14,"style"],[101,19,70,56],[101,22,72,38,"props"],[101,27,70,56],[101,28,72,14,"style"],[101,33,70,56],[102,0,70,56],[102,14,72,24,"remainder"],[102,23,70,56],[102,65,72,38,"props"],[102,70,70,56],[103,0,73,6],[103,17,74,8],[103,46,74,9],[103,63,74,8],[104,0,75,10],[104,12,75,10],[104,15,75,13],[104,33,75,29,"index"],[104,38,74,8],[105,0,76,10],[105,12,76,10],[105,17,76,15],[105,19,76,17],[105,20,76,18,"parentStyle"],[105,31,76,17],[105,33,76,31,"style"],[105,38,76,17],[106,0,74,8],[106,13,77,14],[106,18,77,18],[106,19,77,19,"props"],[106,24,77,14],[106,25,77,25,"childrenProps"],[106,38,74,8],[106,40,78,14,"remainder"],[106,49,74,8],[107,0,74,8],[108,0,74,8],[109,0,74,8],[110,0,74,8],[111,0,74,8],[111,13,73,6],[112,0,81,5],[112,9,70,11],[112,10,70,4],[113,0,82,3],[116,31,84,11],[117,0,84,11],[119,0,84,11],[119,44,86,56],[119,49,86,61,"props"],[119,54,84,11],[120,0,84,11],[120,12,86,12,"parse"],[120,17,84,11],[120,32,86,12,"parse"],[120,37,84,11],[121,0,84,11],[121,12,86,19,"childrenProps"],[121,25,84,11],[121,40,86,19,"childrenProps"],[121,53,84,11],[122,0,84,11],[122,12,86,37,"remainder"],[122,21,84,11],[124,0,88,4],[124,15,89,6],[124,44,89,7],[124,61,89,6],[125,0,89,12],[125,10,89,12],[125,13,89,15],[125,15,89,17],[125,28,89,17,"ref"],[125,32,89,20],[126,0,89,20],[126,19,89,25],[126,25,89,29],[126,26,89,30,"_root"],[126,31,89,25],[126,34,89,38,"ref"],[126,38,89,20],[127,0,89,20],[128,0,89,6],[128,11,89,48,"remainder"],[128,20,89,6],[129,0,89,6],[130,0,89,6],[131,0,89,6],[132,0,89,6],[133,0,89,6],[133,12,90,9],[133,17,90,14,"getParsedText"],[133,30,90,9],[133,32,89,6],[133,33,88,4],[134,0,93,3],[137,4,23,25,"React"],[137,19,23,31,"Component"],[137,28],[139,0,23,6,"ParsedText"],[139,2,23,6,"ParsedText"],[139,12],[139,13,24,9,"displayName"],[139,24],[139,27,24,23],[139,39],[140,0,23,6,"ParsedText"],[140,2,23,6,"ParsedText"],[140,12],[140,13,26,9,"propTypes"],[140,22],[140,43,27,7,"Text"],[140,61,27,12,"propTypes"],[140,70],[141,0,28,4,"parse"],[141,4,28,4,"parse"],[141,9,28,9],[141,11,28,11,"PropTypes"],[141,30,28,21,"arrayOf"],[141,37,28,11],[141,38,29,6,"PropTypes"],[141,57,29,16,"oneOfType"],[141,66,29,6],[141,67,29,26],[141,68,29,27,"defaultParseShape"],[141,85,29,26],[141,87,29,46,"customParseShape"],[141,103,29,26],[141,104,29,6],[141,105,28,11],[141,106],[142,0,31,4,"childrenProps"],[142,4,31,4,"childrenProps"],[142,17,31,17],[142,19,31,19,"PropTypes"],[142,38,31,29,"shape"],[142,43,31,19],[142,44,31,35,"Text"],[142,62,31,40,"propTypes"],[142,71,31,19],[144,0,23,6,"ParsedText"],[144,2,23,6,"ParsedText"],[144,12],[144,13,34,9,"defaultProps"],[144,25],[144,28,34,24],[145,0,35,4,"parse"],[145,4,35,4,"parse"],[145,9,35,9],[145,11,35,11],[145,15,34,24],[146,0,36,4,"childrenProps"],[146,4,36,4,"childrenProps"],[146,17,36,17],[146,19,36,19],[147,0,34,24],[147,3],[148,17,96,15,"ParsedText"],[148,27]],"functionMap":{"names":["<global>","ParsedText","setNativeProps","getPatterns","props.parse.map$argument_0","getParsedText","textExtraction.parse.map$argument_0","render","Text.props.ref"],"mappings":"AAA;ACsB;ECgB;GDE;EEE;gCCC;KDU;GFC;EIE;sCCa;KDW;GJC;EME;iBCK,yBD;GNI;CDC"}},"type":"js/module"}]}