{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"react-native-firebase","data":{"isAsync":false}},{"name":"axios","data":{"isAsync":false}},{"name":"./AccountApi","data":{"isAsync":false}},{"name":"./LocalStorage","data":{"isAsync":false}},{"name":"../constants","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _reactNativeFirebase = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"react-native-firebase\"));\n\n  var _axios = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"axios\"));\n\n  var _AccountApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./AccountApi\"));\n\n  var _LocalStorage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./LocalStorage\"));\n\n  var _constants = _$$_REQUIRE(_dependencyMap[8], \"../constants\");\n\n  var NotificationApi = function () {\n    function NotificationApi() {\n      (0, _classCallCheck2.default)(this, NotificationApi);\n    }\n\n    (0, _createClass2.default)(NotificationApi, null, [{\n      key: \"init\",\n      value: function init() {\n        var messaging, permission, newToken;\n        return _regenerator.default.async(function init$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                messaging = _reactNativeFirebase.default.messaging();\n                _context.next = 4;\n                return _regenerator.default.awrap(messaging.hasPermission());\n\n              case 4:\n                permission = _context.sent;\n\n                if (permission) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 8;\n                return _regenerator.default.awrap(messaging.requestPermission());\n\n              case 8:\n                NotificationApi.initialized = permission;\n                NotificationApi.createMainChannel();\n                _context.next = 12;\n                return _regenerator.default.awrap(NotificationApi.hasTokenChanged());\n\n              case 12:\n                newToken = _context.sent;\n                if (newToken) NotificationApi.updateToken(newToken);\n                messaging.onTokenRefresh(NotificationApi.updateToken);\n                _context.next = 20;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[0, 17]]);\n      }\n    }, {\n      key: \"createMainChannel\",\n      value: function createMainChannel() {\n        if (!NotificationApi.initialized) return;\n        var channel = new _reactNativeFirebase.default.notifications.Android.Channel('main-channel', 'Main Channel', _reactNativeFirebase.default.notifications.Android.Importance.High).setDescription('Main notification channel');\n\n        _reactNativeFirebase.default.notifications().android.createChannel(channel);\n      }\n    }, {\n      key: \"hasTokenChanged\",\n      value: function hasTokenChanged() {\n        var remoteTokenPromise, localTokenPromise, remoteToken, localToken;\n        return _regenerator.default.async(function hasTokenChanged$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (NotificationApi.initialized) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                remoteTokenPromise = _reactNativeFirebase.default.messaging().getToken();\n                localTokenPromise = _LocalStorage.default.loadDeviceToken();\n                _context2.next = 6;\n                return _regenerator.default.awrap(remoteTokenPromise);\n\n              case 6:\n                remoteToken = _context2.sent;\n                _context2.next = 9;\n                return _regenerator.default.awrap(localTokenPromise);\n\n              case 9:\n                localToken = _context2.sent;\n\n                if (!(remoteToken === localToken)) {\n                  _context2.next = 14;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", false);\n\n              case 14:\n                return _context2.abrupt(\"return\", remoteToken);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        });\n      }\n    }, {\n      key: \"updateToken\",\n      value: function updateToken(token) {\n        if (!NotificationApi.initialized) return;\n\n        _LocalStorage.default.saveDeviceToken(token);\n\n        _axios.default.put(\"http://\" + _constants.SERVER_IP + \"/user/\" + _AccountApi.default.getUserId(), {\n          deviceToken: token\n        });\n      }\n    }, {\n      key: \"wasOpenedByNotification\",\n      value: function wasOpenedByNotification() {\n        var notifications, openingNotification;\n        return _regenerator.default.async(function wasOpenedByNotification$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (NotificationApi.initialized) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                notifications = _reactNativeFirebase.default.notifications();\n                _context3.next = 5;\n                return _regenerator.default.awrap(notifications.getInitialNotification());\n\n              case 5:\n                openingNotification = _context3.sent;\n\n                if (openingNotification) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 8:\n                return _context3.abrupt(\"return\", openingNotification.notification.data.conversationId);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        });\n      }\n    }]);\n    return NotificationApi;\n  }();\n\n  var _default = NotificationApi;\n  exports.default = _default;\n});","lineCount":190,"map":[[15,0,3,0],[17,0,4,0],[19,0,6,0],[21,0,7,0],[23,0,8,0],[25,6,10,6,"NotificationApi"],[25,21],[39,0,15,12,"messaging"],[39,16,15,12,"messaging"],[39,25],[39,28,15,24,"firebase"],[39,57,15,33,"messaging"],[39,66,15,24],[39,68],[41,50,16,31,"messaging"],[41,59,16,40],[41,60,16,41,"hasPermission"],[41,73,16,31],[41,75],[44,0,16,12,"permission"],[44,16,16,12,"permission"],[44,26],[46,20,17,11,"permission"],[46,30],[52,50,18,14,"messaging"],[52,59,18,23],[52,60,18,24,"requestPermission"],[52,77,18,14],[52,79],[55,0,20,6,"NotificationApi"],[55,16,20,6,"NotificationApi"],[55,31,20,21],[55,32,20,22,"initialized"],[55,43,20,6],[55,46,20,36,"permission"],[55,56,20,6],[56,0,21,6,"NotificationApi"],[56,16,21,6,"NotificationApi"],[56,31,21,21],[56,32,21,22,"createMainChannel"],[56,49,21,6],[58,50,23,29,"NotificationApi"],[58,65,23,44],[58,66,23,45,"hasTokenChanged"],[58,81,23,29],[58,83],[61,0,23,12,"newToken"],[61,16,23,12,"newToken"],[61,24],[62,0,24,6],[62,20,24,10,"newToken"],[62,28,24,6],[62,30,25,8,"NotificationApi"],[62,45,25,23],[62,46,25,24,"updateToken"],[62,57,25,8],[62,58,25,36,"newToken"],[62,66,25,8],[63,0,27,6,"messaging"],[63,16,27,6,"messaging"],[63,25,27,15],[63,26,27,16,"onTokenRefresh"],[63,40,27,6],[63,41,27,31,"NotificationApi"],[63,56,27,46],[63,57,27,47,"updateToken"],[63,68,27,6],[70,0,30,6,"console"],[70,16,30,6,"console"],[70,23,30,13],[70,24,30,14,"log"],[70,27,30,6],[81,42,34,29],[82,0,35,4],[82,12,35,8],[82,13,35,9,"NotificationApi"],[82,28,35,24],[82,29,35,25,"initialized"],[82,40,35,4],[82,42,36,6],[83,0,38,4],[83,12,38,10,"channel"],[83,19,38,17],[83,22,38,20],[83,26,38,24,"firebase"],[83,55,38,33,"notifications"],[83,68,38,24],[83,69,38,47,"Android"],[83,76,38,24],[83,77,38,55,"Channel"],[83,84,38,20],[83,85,39,6],[83,99,38,20],[83,101,40,6],[83,115,38,20],[83,117,41,6,"firebase"],[83,146,41,15,"notifications"],[83,159,41,6],[83,160,41,29,"Android"],[83,167,41,6],[83,168,41,37,"Importance"],[83,178,41,6],[83,179,41,48,"High"],[83,183,38,20],[83,185,42,6,"setDescription"],[83,199,38,20],[83,200,42,21],[83,227,38,20],[83,228,38,4],[85,0,43,4,"firebase"],[85,37,43,13,"notifications"],[85,50,43,4],[85,53,43,29,"android"],[85,60,43,4],[85,61,43,37,"createChannel"],[85,74,43,4],[85,75,43,51,"channel"],[85,82,43,4],[86,0,44,3],[95,20,47,9,"NotificationApi"],[95,35,47,24],[95,36,47,25,"initialized"],[95,47],[103,0,50,10,"remoteTokenPromise"],[103,16,50,10,"remoteTokenPromise"],[103,34],[103,37,50,31,"firebase"],[103,66,50,40,"messaging"],[103,75,50,31],[103,78,50,52,"getToken"],[103,86,50,31],[103,88],[104,0,51,10,"localTokenPromise"],[104,16,51,10,"localTokenPromise"],[104,33],[104,36,51,30,"LocalStorage"],[104,58,51,43,"loadDeviceToken"],[104,73,51,30],[104,75],[106,50,52,30,"remoteTokenPromise"],[106,68],[109,0,52,10,"remoteToken"],[109,16,52,10,"remoteToken"],[109,27],[111,50,53,29,"localTokenPromise"],[111,67],[114,0,53,10,"localToken"],[114,16,53,10,"localToken"],[114,26],[116,22,54,8,"remoteToken"],[116,33,54,19],[116,38,54,24,"localToken"],[116,48],[121,50,55,13],[121,55],[124,50,57,13,"remoteToken"],[124,61],[135,34,60,21,"token"],[135,39],[135,41,60,36],[136,0,61,4],[136,12,61,8],[136,13,61,9,"NotificationApi"],[136,28,61,24],[136,29,61,25,"initialized"],[136,40,61,4],[136,42,62,6],[138,0,64,4,"LocalStorage"],[138,30,64,17,"saveDeviceToken"],[138,45,64,4],[138,46,64,33,"token"],[138,51,64,4],[140,0,65,4,"axios"],[140,23,65,10,"put"],[140,26,65,4],[140,39,65,24,"SERVER_IP"],[140,59,65,4],[140,73,65,42,"AccountApi"],[140,93,65,53,"getUserId"],[140,102,65,42],[140,104,65,4],[140,106,65,68],[141,0,66,6,"deviceToken"],[141,10,66,6,"deviceToken"],[141,21,66,17],[141,23,66,19,"token"],[142,0,65,68],[142,9,65,4],[143,0,68,3],[152,20,71,9,"NotificationApi"],[152,35,71,24],[152,36,71,25,"initialized"],[152,47],[160,0,74,10,"notifications"],[160,16,74,10,"notifications"],[160,29],[160,32,74,26,"firebase"],[160,61,74,35,"notifications"],[160,74,74,26],[160,76],[162,50,75,38,"notifications"],[162,63,75,51],[162,64,75,52,"getInitialNotification"],[162,86,75,38],[162,88],[165,0,75,10,"openingNotification"],[165,16,75,10,"openingNotification"],[165,35],[167,20,76,9,"openingNotification"],[167,39],[175,50,80,11,"openingNotification"],[175,69,80,30],[175,70,80,31,"notification"],[175,82,80,11],[175,83,80,44,"data"],[175,87,80,11],[175,88,80,49,"conversationId"],[175,102],[188,17,84,15,"NotificationApi"],[188,32]],"functionMap":{"names":["<global>","NotificationApi","init","createMainChannel","hasTokenChanged","updateToken","wasOpenedByNotification"],"mappings":"AAA;ACS;ECG;GDmB;EEE;GFU;EGE;GHY;EIE;GJQ;EKE;GLW;CDC"}},"type":"js/module"}]}