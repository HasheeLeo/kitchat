{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./constants","data":{"isAsync":false}},{"name":"./types","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {\n    openSettings: true,\n    check: true,\n    request: true,\n    checkNotifications: true,\n    requestNotifications: true,\n    PERMISSIONS: true,\n    RESULTS: true\n  };\n  exports.openSettings = openSettings;\n  exports.check = check;\n  exports.request = request;\n  exports.checkNotifications = checkNotifications;\n  exports.requestNotifications = requestNotifications;\n  Object.defineProperty(exports, \"PERMISSIONS\", {\n    enumerable: true,\n    get: function get() {\n      return _constants.PERMISSIONS;\n    }\n  });\n  Object.defineProperty(exports, \"RESULTS\", {\n    enumerable: true,\n    get: function get() {\n      return _constants.RESULTS;\n    }\n  });\n  exports.default = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _constants = _$$_REQUIRE(_dependencyMap[3], \"./constants\");\n\n  var _types = _$$_REQUIRE(_dependencyMap[4], \"./types\");\n\n  Object.keys(_types).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function get() {\n        return _types[key];\n      }\n    });\n  });\n  var NativePermissionsAndroid = _reactNative.NativeModules.PermissionsAndroid;\n  var RNPermissions = _reactNative.NativeModules.RNPermissions;\n\n  if (RNPermissions == null) {\n    throw new Error(\"react-native-permissions: NativeModule.RNPermissions is null. To fix this issue try these steps:\\n\\u2022 Run `react-native link react-native-permissions` in the project root.\\n\\u2022 Rebuild and re-run the app.\\n\\u2022 If you are using CocoaPods on iOS, run `pod install` in the `ios` directory and then rebuild and re-run the app. You may also need to re-open Xcode to get the new pods.\\n\\u2022 Check that the library was linked correctly when you used the link command by running through the manual installation instructions in the README.\\n* If you are getting this error while unit testing you need to mock the native module. Follow the guide in the README.\\nIf none of these fix the issue, please open an issue on the Github repository: https://github.com/react-native-community/react-native-permissions\");\n  }\n\n  var platformPermissions = _reactNative.Platform.select({\n    ios: Object.values(_constants.IOS),\n    android: Object.values(_constants.ANDROID),\n    default: []\n  });\n\n  function isPlatformPermission(permission) {\n    if (platformPermissions.includes(permission)) {\n      return true;\n    }\n\n    if (__DEV__) {\n      var message = '';\n      message += \"Invalid \" + _reactNative.Platform.OS + \" permission \\\"\" + permission + \"\\\".\";\n      message += ' Must be one of:\\n\\n• ';\n      message += platformPermissions.join('\\n• ');\n      console.error(message);\n    }\n\n    return false;\n  }\n\n  function openSettings() {\n    return RNPermissions.openSettings().then(function () {});\n  }\n\n  function check(permission) {\n    var available, nonRequestables;\n    return _regenerator.default.async(function check$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (isPlatformPermission(permission)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", _constants.RESULTS.UNAVAILABLE);\n\n          case 2:\n            if (!(_reactNative.Platform.OS === 'ios')) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", RNPermissions.check(permission));\n\n          case 4:\n            _context.next = 6;\n            return _regenerator.default.awrap(RNPermissions.isAvailable(permission));\n\n          case 6:\n            available = _context.sent;\n\n            if (available) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", _constants.RESULTS.UNAVAILABLE);\n\n          case 9:\n            _context.next = 11;\n            return _regenerator.default.awrap(_reactNative.PermissionsAndroid.check(permission));\n\n          case 11:\n            if (!_context.sent) {\n              _context.next = 13;\n              break;\n            }\n\n            return _context.abrupt(\"return\", _constants.RESULTS.GRANTED);\n\n          case 13:\n            _context.next = 15;\n            return _regenerator.default.awrap(RNPermissions.getNonRequestables());\n\n          case 15:\n            nonRequestables = _context.sent;\n\n            if (nonRequestables.includes(permission)) {\n              _context.next = 18;\n              break;\n            }\n\n            return _context.abrupt(\"return\", _constants.RESULTS.DENIED);\n\n          case 18:\n            _context.next = 20;\n            return _regenerator.default.awrap(NativePermissionsAndroid.shouldShowRequestPermissionRationale(permission));\n\n          case 20:\n            if (!_context.sent) {\n              _context.next = 24;\n              break;\n            }\n\n            _context.t0 = _constants.RESULTS.DENIED;\n            _context.next = 25;\n            break;\n\n          case 24:\n            _context.t0 = _constants.RESULTS.BLOCKED;\n\n          case 25:\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function request(permission, rationale) {\n    var available, status;\n    return _regenerator.default.async(function request$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (isPlatformPermission(permission)) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", _constants.RESULTS.UNAVAILABLE);\n\n          case 2:\n            if (!(_reactNative.Platform.OS === 'ios')) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", RNPermissions.request(permission));\n\n          case 4:\n            _context2.next = 6;\n            return _regenerator.default.awrap(RNPermissions.isAvailable(permission));\n\n          case 6:\n            available = _context2.sent;\n\n            if (available) {\n              _context2.next = 9;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", _constants.RESULTS.UNAVAILABLE);\n\n          case 9:\n            _context2.next = 11;\n            return _regenerator.default.awrap(_reactNative.PermissionsAndroid.request(permission, rationale));\n\n          case 11:\n            status = _context2.sent;\n\n            if (!(status === 'granted')) {\n              _context2.next = 14;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", _constants.RESULTS.GRANTED);\n\n          case 14:\n            if (!(status === 'denied')) {\n              _context2.next = 16;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", _constants.RESULTS.DENIED);\n\n          case 16:\n            if (!(status === 'never_ask_again')) {\n              _context2.next = 20;\n              break;\n            }\n\n            _context2.next = 19;\n            return _regenerator.default.awrap(RNPermissions.setNonRequestable(permission));\n\n          case 19:\n            return _context2.abrupt(\"return\", _constants.RESULTS.BLOCKED);\n\n          case 20:\n            return _context2.abrupt(\"return\", _constants.RESULTS.UNAVAILABLE);\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  function checkNotifications() {\n    return RNPermissions.checkNotifications();\n  }\n\n  function requestNotifications(options) {\n    return RNPermissions.requestNotifications(options);\n  }\n\n  var _default = {\n    PERMISSIONS: _constants.PERMISSIONS,\n    RESULTS: _constants.RESULTS,\n    openSettings: openSettings,\n    check: check,\n    request: request,\n    checkNotifications: checkNotifications,\n    requestNotifications: requestNotifications\n  };\n  exports.default = _default;\n});","lineCount":273,"map":[[37,0,1,0],[39,0,15,0],[41,0,160,0],[43,0,160,0],[44,0,160,0],[45,0,160,0],[46,0,160,0],[47,0,160,0],[48,0,160,0],[49,0,160,0],[50,0,160,0],[51,0,160,0],[52,0,160,0],[53,0,17,0],[53,6,17,6,"NativePermissionsAndroid"],[53,30,17,30],[53,33,17,33,"NativeModules"],[53,60,17,47,"PermissionsAndroid"],[53,78,17,0],[54,0,19,0],[54,6,19,6,"RNPermissions"],[54,19,38,1],[54,22,38,4,"NativeModules"],[54,49,38,18,"RNPermissions"],[54,62,19,0],[56,0,41,0],[56,6,41,4,"RNPermissions"],[56,19,41,17],[56,23,41,21],[56,27,41,0],[56,29,41,27],[57,0,42,2],[57,10,42,8],[57,14,42,12,"Error"],[57,19,42,8],[57,831,42,2],[58,0,49,1],[60,0,51,0],[60,6,51,6,"platformPermissions"],[60,25,51,25],[60,28,51,28,"Platform"],[60,50,51,37,"select"],[60,56,51,28],[60,57,51,58],[61,0,52,2,"ios"],[61,4,52,2,"ios"],[61,7,52,5],[61,9,52,7,"Object"],[61,15,52,13],[61,16,52,14,"values"],[61,22,52,7],[61,23,52,21,"IOS"],[61,37,52,7],[61,38,51,58],[62,0,53,2,"android"],[62,4,53,2,"android"],[62,11,53,9],[62,13,53,11,"Object"],[62,19,53,17],[62,20,53,18,"values"],[62,26,53,11],[62,27,53,25,"ANDROID"],[62,45,53,11],[62,46,51,58],[63,0,54,2,"default"],[63,4,54,2,"default"],[63,11,54,9],[63,13,54,11],[64,0,51,58],[64,3,51,28],[64,4,51,0],[66,0,57,0],[66,11,57,9,"isPlatformPermission"],[66,31,57,0],[66,32,57,30,"permission"],[66,42,57,0],[66,44,57,63],[67,0,58,2],[67,8,58,6,"platformPermissions"],[67,27,58,25],[67,28,58,26,"includes"],[67,36,58,6],[67,37,58,35,"permission"],[67,47,58,6],[67,48,58,2],[67,50,58,48],[68,0,59,4],[68,13,59,11],[68,17,59,4],[69,0,60,3],[71,0,62,2],[71,8,62,6,"__DEV__"],[71,15,62,2],[71,17,62,15],[72,0,63,4],[72,10,63,8,"message"],[72,17,63,15],[72,20,63,18],[72,22,63,4],[73,0,64,4,"message"],[73,6,64,4,"message"],[73,13,64,11],[73,30,64,26,"Platform"],[73,52,64,35,"OS"],[73,54,64,11],[73,76,64,53,"permission"],[73,86,64,11],[73,94,64,4],[74,0,65,4,"message"],[74,6,65,4,"message"],[74,13,65,11],[74,17,65,15],[74,41,65,4],[75,0,66,4,"message"],[75,6,66,4,"message"],[75,13,66,11],[75,17,66,15,"platformPermissions"],[75,36,66,34],[75,37,66,35,"join"],[75,41,66,15],[75,42,66,40],[75,48,66,15],[75,49,66,4],[76,0,67,4,"console"],[76,6,67,4,"console"],[76,13,67,11],[76,14,67,12,"error"],[76,19,67,4],[76,20,67,18,"message"],[76,27,67,4],[77,0,68,3],[79,0,70,2],[79,11,70,9],[79,16,70,2],[80,0,71,1],[82,0,73,7],[82,11,73,16,"openSettings"],[82,23,73,7],[82,26,73,46],[83,0,74,2],[83,11,74,9,"RNPermissions"],[83,24,74,22],[83,25,74,23,"openSettings"],[83,37,74,9],[83,40,74,38,"then"],[83,44,74,9],[83,45,74,43],[83,57,74,49],[83,58,74,51],[83,59,74,9],[83,60,74,2],[84,0,75,1],[86,0,77,7],[86,11,77,22,"check"],[86,16,77,7],[86,17,77,28,"permission"],[86,27,77,7],[87,0,77,7],[88,0,77,7],[89,0,77,7],[90,0,77,7],[91,0,77,7],[92,0,77,7],[92,16,78,7,"isPlatformPermission"],[92,36,78,27],[92,37,78,28,"permission"],[92,47,78,27],[92,48,77,7],[93,0,77,7],[94,0,77,7],[95,0,77,7],[97,0,77,7],[97,45,79,11,"RESULTS"],[97,64,79,19,"UNAVAILABLE"],[97,75,77,7],[99,0,77,7],[100,0,77,7],[100,18,82,6,"Platform"],[100,40,82,15,"OS"],[100,42,82,6],[100,47,82,22],[100,52,77,7],[101,0,77,7],[102,0,77,7],[103,0,77,7],[105,0,77,7],[105,45,83,11,"RNPermissions"],[105,58,83,24],[105,59,83,25,"check"],[105,64,83,11],[105,65,83,31,"permission"],[105,75,83,11],[105,76,77,7],[107,0,77,7],[108,0,77,7],[109,0,77,7],[109,46,86,26,"RNPermissions"],[109,59,86,39],[109,60,86,40,"isAvailable"],[109,71,86,26],[109,72,86,52,"permission"],[109,82,86,26],[109,83,77,7],[111,0,77,7],[112,0,86,8,"available"],[112,12,86,8,"available"],[112,21,77,7],[114,0,77,7],[114,16,88,7,"available"],[114,25,77,7],[115,0,77,7],[116,0,77,7],[117,0,77,7],[119,0,77,7],[119,45,89,11,"RESULTS"],[119,64,89,19,"UNAVAILABLE"],[119,75,77,7],[121,0,77,7],[122,0,77,7],[123,0,77,7],[123,46,93,12,"PermissionsAndroid"],[123,78,93,31,"check"],[123,83,93,12],[123,84,93,37,"permission"],[123,94,93,12],[123,95,77,7],[125,0,77,7],[126,0,77,7],[127,0,77,7],[128,0,77,7],[129,0,77,7],[131,0,77,7],[131,45,94,11,"RESULTS"],[131,64,94,19,"GRANTED"],[131,71,77,7],[133,0,77,7],[134,0,77,7],[135,0,77,7],[135,46,97,32,"RNPermissions"],[135,59,97,45],[135,60,97,46,"getNonRequestables"],[135,78,97,32],[135,80,77,7],[137,0,77,7],[138,0,97,8,"nonRequestables"],[138,12,97,8,"nonRequestables"],[138,27,77,7],[140,0,77,7],[140,16,99,7,"nonRequestables"],[140,31,99,22],[140,32,99,23,"includes"],[140,40,99,7],[140,41,99,32,"permission"],[140,51,99,7],[140,52,77,7],[141,0,77,7],[142,0,77,7],[143,0,77,7],[145,0,77,7],[145,45,100,11,"RESULTS"],[145,64,100,19,"DENIED"],[145,70,77,7],[147,0,77,7],[148,0,77,7],[149,0,77,7],[149,46,103,16,"NativePermissionsAndroid"],[149,70,103,40],[149,71,103,41,"shouldShowRequestPermissionRationale"],[149,107,103,16],[149,108,104,4,"permission"],[149,118,103,16],[149,119,77,7],[151,0,77,7],[152,0,77,7],[153,0,77,7],[154,0,77,7],[155,0,77,7],[157,0,77,7],[157,26,106,6,"RESULTS"],[157,45,106,14,"DENIED"],[157,51,77,7],[158,0,77,7],[159,0,77,7],[161,0,77,7],[162,0,77,7],[162,26,107,6,"RESULTS"],[162,45,107,14,"BLOCKED"],[162,52,77,7],[164,0,77,7],[165,0,77,7],[167,0,77,7],[168,0,77,7],[169,0,77,7],[170,0,77,7],[171,0,77,7],[172,0,77,7],[173,0,77,7],[175,0,110,7],[175,11,110,22,"request"],[175,18,110,7],[175,19,111,2,"permission"],[175,29,110,7],[175,31,112,2,"rationale"],[175,40,110,7],[176,0,110,7],[177,0,110,7],[178,0,110,7],[179,0,110,7],[180,0,110,7],[181,0,110,7],[181,16,114,7,"isPlatformPermission"],[181,36,114,27],[181,37,114,28,"permission"],[181,47,114,27],[181,48,110,7],[182,0,110,7],[183,0,110,7],[184,0,110,7],[186,0,110,7],[186,46,115,11,"RESULTS"],[186,65,115,19,"UNAVAILABLE"],[186,76,110,7],[188,0,110,7],[189,0,110,7],[189,18,118,6,"Platform"],[189,40,118,15,"OS"],[189,42,118,6],[189,47,118,22],[189,52,110,7],[190,0,110,7],[191,0,110,7],[192,0,110,7],[194,0,110,7],[194,46,119,11,"RNPermissions"],[194,59,119,24],[194,60,119,25,"request"],[194,67,119,11],[194,68,119,33,"permission"],[194,78,119,11],[194,79,110,7],[196,0,110,7],[197,0,110,7],[198,0,110,7],[198,46,122,26,"RNPermissions"],[198,59,122,39],[198,60,122,40,"isAvailable"],[198,71,122,26],[198,72,122,52,"permission"],[198,82,122,26],[198,83,110,7],[200,0,110,7],[201,0,122,8,"available"],[201,12,122,8,"available"],[201,21,110,7],[203,0,110,7],[203,16,124,7,"available"],[203,25,110,7],[204,0,110,7],[205,0,110,7],[206,0,110,7],[208,0,110,7],[208,46,125,11,"RESULTS"],[208,65,125,19,"UNAVAILABLE"],[208,76,110,7],[210,0,110,7],[211,0,110,7],[212,0,110,7],[212,46,128,23,"PermissionsAndroid"],[212,78,128,42,"request"],[212,85,128,23],[212,86,130,4,"permission"],[212,96,128,23],[212,98,131,4,"rationale"],[212,107,128,23],[212,108,110,7],[214,0,110,7],[215,0,128,8,"status"],[215,12,128,8,"status"],[215,18,110,7],[217,0,110,7],[217,18,134,6,"status"],[217,24,134,12],[217,29,134,17],[217,38,110,7],[218,0,110,7],[219,0,110,7],[220,0,110,7],[222,0,110,7],[222,46,135,11,"RESULTS"],[222,65,135,19,"GRANTED"],[222,72,110,7],[224,0,110,7],[225,0,110,7],[225,18,138,6,"status"],[225,24,138,12],[225,29,138,17],[225,37,110,7],[226,0,110,7],[227,0,110,7],[228,0,110,7],[230,0,110,7],[230,46,139,11,"RESULTS"],[230,65,139,19,"DENIED"],[230,71,110,7],[232,0,110,7],[233,0,110,7],[233,18,142,6,"status"],[233,24,142,12],[233,29,142,17],[233,46,110,7],[234,0,110,7],[235,0,110,7],[236,0,110,7],[238,0,110,7],[239,0,110,7],[239,46,143,10,"RNPermissions"],[239,59,143,23],[239,60,143,24,"setNonRequestable"],[239,77,143,10],[239,78,143,42,"permission"],[239,88,143,10],[239,89,110,7],[241,0,110,7],[242,0,110,7],[242,46,144,11,"RESULTS"],[242,65,144,19,"BLOCKED"],[242,72,110,7],[244,0,110,7],[245,0,110,7],[245,46,147,9,"RESULTS"],[245,65,147,17,"UNAVAILABLE"],[245,76,110,7],[247,0,110,7],[248,0,110,7],[249,0,110,7],[250,0,110,7],[251,0,110,7],[252,0,110,7],[253,0,110,7],[255,0,150,7],[255,11,150,16,"checkNotifications"],[255,29,150,7],[255,32,150,69],[256,0,151,2],[256,11,151,9,"RNPermissions"],[256,24,151,22],[256,25,151,23,"checkNotifications"],[256,43,151,9],[256,45,151,2],[257,0,152,1],[259,0,154,7],[259,11,154,16,"requestNotifications"],[259,31,154,7],[259,32,155,2,"options"],[259,39,154,7],[259,41,156,34],[260,0,157,2],[260,11,157,9,"RNPermissions"],[260,24,157,22],[260,25,157,23,"requestNotifications"],[260,45,157,9],[260,46,157,44,"options"],[260,53,157,9],[260,54,157,2],[261,0,158,1],[263,17,163,15],[264,0,164,2,"PERMISSIONS"],[264,4,164,2,"PERMISSIONS"],[264,15,164,13],[264,17,164,2,"PERMISSIONS"],[264,39,163,15],[265,0,165,2,"RESULTS"],[265,4,165,2,"RESULTS"],[265,11,165,9],[265,13,165,2,"RESULTS"],[265,31,163,15],[266,0,166,2,"openSettings"],[266,4,166,2,"openSettings"],[266,16,166,14],[266,18,166,2,"openSettings"],[266,30,163,15],[267,0,167,2,"check"],[267,4,167,2,"check"],[267,9,167,7],[267,11,167,2,"check"],[267,16,163,15],[268,0,168,2,"request"],[268,4,168,2,"request"],[268,11,168,9],[268,13,168,2,"request"],[268,20,163,15],[269,0,169,2,"checkNotifications"],[269,4,169,2,"checkNotifications"],[269,22,169,20],[269,24,169,2,"checkNotifications"],[269,42,163,15],[270,0,170,2,"requestNotifications"],[270,4,170,2,"requestNotifications"],[270,24,170,22],[270,26,170,2,"requestNotifications"],[271,0,163,15],[271,3]],"functionMap":{"names":["<global>","isPlatformPermission","openSettings","RNPermissions.openSettings.then$argument_0","check","request","checkNotifications","requestNotifications"],"mappings":"AAA;ACwD;CDc;OEE;2CCC,QD;CFC;OIE;CJ+B;OKE;CLsC;OME;CNE;OOE;CPI"}},"type":"js/module"}]}