{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"js-base64","data":{"isAsync":false}},{"name":"file-type","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _jsBase = _$$_REQUIRE(_dependencyMap[1], \"js-base64\");\n\n  var _fileType = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"file-type\"));\n\n  function convertBase64ToArrayBuffer(data) {\n    var UTF8Data = _jsBase.Base64.atob(data);\n\n    var UTF8DataLength = UTF8Data.length;\n    var bytes = new Uint8Array(UTF8DataLength);\n\n    for (var i = 0; i < UTF8DataLength; i++) {\n      bytes[i] = UTF8Data.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  function base64ToType(data) {\n    var convertedData = convertBase64ToArrayBuffer(data);\n    convertedData = new Uint8Array(convertedData);\n    var type = (0, _fileType.default)(convertedData);\n\n    if (type === undefined || type === null) {\n      var decodedData = String.fromCharCode.apply(null, convertedData);\n      if (decodedData.startsWith('<html>') || decodedData.endsWith('</html>')) type = {\n        dataWithMime: '',\n        ext: 'html',\n        mime: 'text/html'\n      };else type = {\n          dataWithMime: '',\n          ext: 'txt',\n          mime: 'text/plain'\n        };\n    }\n\n    if (type) type.dataWithMime = \"data:\" + type.mime + \";base64,\" + data;\n    return type;\n  }\n\n  var _default = base64ToType;\n  exports.default = _default;\n});","lineCount":50,"map":[[9,0,5,0],[11,0,6,0],[13,0,14,0],[13,11,14,9,"convertBase64ToArrayBuffer"],[13,37,14,0],[13,38,14,36,"data"],[13,42,14,0],[13,44,14,50],[14,0,15,2],[14,8,15,8,"UTF8Data"],[14,16,15,16],[14,19,15,19,"Base64"],[14,34,15,26,"atob"],[14,38,15,19],[14,39,15,31,"data"],[14,43,15,19],[14,44,15,2],[16,0,16,2],[16,8,16,8,"UTF8DataLength"],[16,22,16,22],[16,25,16,25,"UTF8Data"],[16,33,16,33],[16,34,16,34,"length"],[16,40,16,2],[17,0,18,2],[17,8,18,6,"bytes"],[17,13,18,11],[17,16,18,14],[17,20,18,18,"Uint8Array"],[17,30,18,14],[17,31,18,29,"UTF8DataLength"],[17,45,18,14],[17,46,18,2],[19,0,19,2],[19,9,19,7],[19,13,19,11,"i"],[19,14,19,12],[19,17,19,15],[19,18,19,2],[19,20,19,18,"i"],[19,21,19,19],[19,24,19,22,"UTF8DataLength"],[19,38,19,2],[19,40,19,38,"i"],[19,41,19,39],[19,43,19,2],[20,0,20,4,"bytes"],[20,6,20,4,"bytes"],[20,11,20,9],[20,12,20,10,"i"],[20,13,20,9],[20,14,20,4],[20,17,20,15,"UTF8Data"],[20,25,20,23],[20,26,20,24,"charCodeAt"],[20,36,20,15],[20,37,20,35,"i"],[20,38,20,15],[20,39,20,4],[21,0,19,2],[23,0,22,2],[23,11,22,9,"bytes"],[23,16,22,14],[23,17,22,15,"buffer"],[23,23,22,2],[24,0,23,1],[26,0,25,0],[26,11,25,9,"base64ToType"],[26,23,25,0],[26,24,25,22,"data"],[26,28,25,0],[26,30,25,47],[27,0,26,2],[27,8,26,6,"convertedData"],[27,21,26,19],[27,24,26,22,"convertBase64ToArrayBuffer"],[27,50,26,48],[27,51,26,49,"data"],[27,55,26,48],[27,56,26,2],[28,0,27,2,"convertedData"],[28,4,27,2,"convertedData"],[28,17,27,15],[28,20,27,18],[28,24,27,22,"Uint8Array"],[28,34,27,18],[28,35,27,33,"convertedData"],[28,48,27,18],[28,49,27,2],[29,0,29,2],[29,8,29,6,"type"],[29,12,29,10],[29,15,29,13],[29,38,29,22,"convertedData"],[29,51,29,13],[29,52,29,2],[31,0,30,2],[31,8,30,6,"type"],[31,12,30,10],[31,17,30,15,"undefined"],[31,26,30,6],[31,30,30,28,"type"],[31,34,30,32],[31,39,30,37],[31,43,30,2],[31,45,30,43],[32,0,31,4],[32,10,31,10,"decodedData"],[32,21,31,21],[32,24,31,24,"String"],[32,30,31,30],[32,31,31,31,"fromCharCode"],[32,43,31,24],[32,44,31,44,"apply"],[32,49,31,24],[32,50,31,50],[32,54,31,24],[32,56,31,56,"convertedData"],[32,69,31,24],[32,70,31,4],[33,0,33,4],[33,10,33,8,"decodedData"],[33,21,33,19],[33,22,33,20,"startsWith"],[33,32,33,8],[33,33,33,31],[33,41,33,8],[33,46,33,44,"decodedData"],[33,57,33,55],[33,58,33,56,"endsWith"],[33,66,33,44],[33,67,33,65],[33,76,33,44],[33,77,33,4],[33,79,34,6,"type"],[33,83,34,10],[33,86,34,13],[34,0,34,14,"dataWithMime"],[34,8,34,14,"dataWithMime"],[34,20,34,26],[34,22,34,28],[34,24,34,13],[35,0,34,32,"ext"],[35,8,34,32,"ext"],[35,11,34,35],[35,13,34,37],[35,19,34,13],[36,0,34,45,"mime"],[36,8,34,45,"mime"],[36,12,34,49],[36,14,34,51],[37,0,34,13],[37,7,34,6],[37,8,33,4],[37,13,37,6,"type"],[37,17,37,10],[37,20,37,13],[38,0,37,14,"dataWithMime"],[38,10,37,14,"dataWithMime"],[38,22,37,26],[38,24,37,28],[38,26,37,13],[39,0,37,32,"ext"],[39,10,37,32,"ext"],[39,13,37,35],[39,15,37,37],[39,20,37,13],[40,0,37,44,"mime"],[40,10,37,44,"mime"],[40,14,37,48],[40,16,37,50],[41,0,37,13],[41,9,37,6],[42,0,38,3],[44,0,40,2],[44,8,40,6,"type"],[44,12,40,2],[44,14,41,4,"type"],[44,18,41,8],[44,19,41,9,"dataWithMime"],[44,31,41,4],[44,44,41,32,"type"],[44,48,41,36],[44,49,41,37,"mime"],[44,53,41,4],[44,69,41,52,"data"],[44,73,41,4],[45,0,43,2],[45,11,43,9,"type"],[45,15,43,2],[46,0,44,1],[48,17,46,15,"base64ToType"],[48,29]],"functionMap":{"names":["<global>","convertBase64ToArrayBuffer","base64ToType"],"mappings":"AAA;ACa;CDS;AEE;CFmB"}},"type":"js/module"}]}